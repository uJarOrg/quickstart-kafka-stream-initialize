git :
  commit : '@git.commit.id.abbrev@'
  build_time : '@git.build.time@'

info :
  app :
    name : '@project.name@'
    description : '@project.description@'
    version : '@project.version@'
    git_commit : ${git.commit}
    build_time : ${git.build_time}

spring :
  application :
    name : quickstart-kafka-stream-initialize
  jackson :
    default-property-inclusion : NON_NULL
  lifecycle :
    timeout-per-shutdown-phase : ${TIMEOUT_PER_SHUTDOWN:20s}
  kafka :
    producer :
      bootstrap-servers : ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      value-serializer : org.apache.kafka.common.serialization.StringSerializer
      properties :
        security.protocol : ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
        sasl.mechanism : SCRAM-SHA-512
    consumer :
      bootstrap-servers : ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      value-deserializer : org.apache.kafka.common.serialization.StringDeserializer
      group-id : test-group
      auto-offset-reset : earliest
      properties :
        isolation.level : read_committed
        spring.json.trusted.packages : '*'
    admin :
      properties :
        bootstrap.servers : ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        security.protocol : ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
        sasl.mechanism : SCRAM-SHA-512
    streams :
      application-id : bsmsgkafkastreaminitialize
      properties :
        "default.key.serde" : 'org.apache.kafka.common.serialization.Serdes$StringSerde'
        "default.value.serde" : 'org.apache.kafka.common.serialization.Serdes$StringSerde'
        "default.deserialization.exception.handler" : "org.springframework.kafka.streams.RecoveringDeserializationExceptionHandler"
  jmx :
    enabled : true

logging :
  pattern :
    level : '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level :
    ROOT : ${LOGGING_LEVEL_ROOT:INFO}

management :
  health :
    livenessstate :
      enabled : true
    readinessstate :
      enabled : true
    kafka :
      enabled : true
      response-timeout : 500
  info :
    env :
      enabled : true
    java :
      enabled : true
    os :
      enabled : true
  server :
    port : ${MANAGEMENT_SERVER_PORT:8080}
    add-application-context-header : true

  metrics :
    tags :
      application : ${spring.application.name}
      profiles : ${spring.profiles.active}
    distribution :
      percentiles-histogram :
        http :
          server :
            requests : true
  tracing :
    sampling :
      probability : 1.0
    enabled : true
  prometheus :
    metrics :
      export :
        step : 20s
        enabled : true
  zipkin :
    tracing :
      endpoint : ${TEMPO_URL:http://localhost:9411/api/v2/spans}


  endpoints :
    enabled-by-default : false
    web :
      exposure :
        include : health, metrics, prometheus, info, env, kafka
  endpoint :
    health :
      enabled : true
      show-details : always
      probes :
        enabled : true
    info :
      enabled : true
    env :
      enabled : true
      show-values : always
    prometheus :
      enabled : true

server :
  port : ${SERVER_PORT:8080}
  shutdown : graceful
  forward-headers-strategy : framework
  tomcat :
    redirect-context-root : false

iqkv :
  info :
    description : '@project.description@'
    relative-path : ${SERVER_SERVLET_CONTEXT_PATH:/}
    version : '@project.version@'
  kafka :
    admin :
      create-topics : ${KAFKA_ADMIN_CREATES_TOPICS:true}
    topics :
      for-input :
        name : ${KAFKA_TOPIC_FOR_INPUT:input-topic}
        partitions : ${KAFKA_TOPIC_PARTITIONS_FOR_INPUT:1}
        retention : ${KAFKA_TOPIC_RETENTION_FOR_INPUT:30m}
      for-output :
        name : ${KAFKA_TOPIC_FOR_OUTPUT:output-topic}
        partitions : ${KAFKA_TOPIC_PARTITIONS_FOR_OUTPUT:1}
        retention : ${KAFKA_TOPIC_RETENTION_FOR_OUTPUT:30m}
    error-handling :
      dead-letter :
        retention : 1d
        suffix : .DLT
      backoff :
        initial-interval : 500ms
        max-interval : 2s
        max-retries : 4
        multiplier : 1.5
